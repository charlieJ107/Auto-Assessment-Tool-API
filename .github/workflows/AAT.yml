# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Auto Assessment Tool

on:
  push:
    branches: [ "master" ]

jobs:
  build_and_test_on_linux:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: aat
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Build
        run: go build -o AAT_Api-linux-x64 -v AAT_Api

      - name: Test
        env:
          DB_HOST: localhost
          DB_USER: ${{ secrets.POSTGRES_USER }}
          DB_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          DB_NAME: aat
          DB_PORT: 5432
        run: go test -v ./...

  release_on_linux:
    runs-on: ubuntu-latest
    needs: build_and_test_on_linux
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Build Binary
        run: go build -o AAT_Api-linux-x64 -v AAT_Api

      - name: Create Release
        run: |
          gh release create ${{ github.ref_name }} -t "Release ${{ github.ref_name }}" -n "Release ${{ github.ref_name }}"
          gh release upload ${{ github.ref_name }} AAT_Api-linux-x64

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_ID:${{github.ref_name}} --label "run_id=${{github.run_id}}"

      - name: Log in to registry
        # This is where you will update the personal access token to GITHUB_TOKEN
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Push image
        run: |
          echo IMAGE_ID=IMAGE_ID
          docker tag $IMAGE_ID:${{github.ref_name}} $IMAGE_ID:latest
          docker push $IMAGE_ID:${{github.ref_name}}
          docker push $IMAGE_ID:latest

  release_on_windows:
    runs-on: windows-latest
    needs: release_on_linux
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Build
        run: go build -o AAT_Api-windows-x64 -v AAT_Api

      - name: Create Release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        run: |
          gh release upload ${{ github.ref_name }} AAT_Api-windows-x64
